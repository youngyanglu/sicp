(define (union-set set1 set2)
  (cond ((null? set2) set1)
        ((null? set1) set2)
        ((NOT (element-of-set? (car set1) set2))
         (cons (car set1)
               (union-set (cdr set1) 
                                 set2)))
        (else (union-set (cdr set1) 
                                set2))))
(define (element-of-set? x set)
  (cond ((null? set) false)
        ((equal? x (car set)) true)
        (else (element-of-set? x (cdr set)))))

;(union-set (list 1 2 3 4) (list 3 4 5 6))
